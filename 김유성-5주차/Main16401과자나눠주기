package study;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.List;
import java.util.StringTokenizer;

public class Main16401과자나눠주기 {
	
	static int M, N; // M: 조카 수, N: 과자 수
	static long max = 0;
	static List<Integer> snack = new ArrayList<>();
	
	public static void main(String[] args) throws IOException{
		init();
		checkSnackLen();
		System.out.println(max);
	}
	
	static void init() throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st = new StringTokenizer(br.readLine());
		
		M = Integer.parseInt(st.nextToken());
		N = Integer.parseInt(st.nextToken());

		st = new StringTokenizer(br.readLine());
		for (int i = 0; i < N; i++) {
			int input = Integer.parseInt(st.nextToken());
			snack.add(input);
		}
		snack.sort((a, b) -> a - b);
	}
	
	static void checkSnackLen() {
		long left = 1, right = snack.get(snack.size() - 1);
		
		while (left <= right) {
			int count = 0;
			long mid = (left + right) / 2;
			for (int i = 0; i < snack.size(); i++) {
				count += snack.get(i) / mid;
			}
			
			if (count >= M) {
				max = Math.max(max, mid);
				left = mid + 1;
			} else {
				right = mid - 1;
			}
		}
	}
}
