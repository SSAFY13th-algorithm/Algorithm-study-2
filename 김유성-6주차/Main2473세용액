import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.Arrays;
import java.util.StringTokenizer;

public class Main {

	static int N;
	static BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
	static StringTokenizer st;
	static int[] liquid;
	static int[] ret = new int[3];
	static long min;

	public static void main(String[] args) throws IOException {
		init();
		getMin();
		System.out.println(ret[0] + " " + ret[1] + " " + ret[2]);
	}

	static void init() throws IOException {
		N = Integer.parseInt(br.readLine());
		liquid = new int[N];

		st = new StringTokenizer(br.readLine());
		for (int i = 0; i < N; i++) {
			liquid[i] = Integer.parseInt(st.nextToken());
		}
		Arrays.sort(liquid);
		min = 3_000_000_000L;
	}

	static void getMin() {
		for (int i = 0; i < N - 2; i++) {
			int start = i + 1, end = N - 1;
			while (start < end) {
				long now = (long)liquid[i] + (long)liquid[start] + (long)liquid[end]; 
				if (now < 0) {
					if (Math.abs(now) < Math.abs(min)) {
						min = now;
						ret[0] = liquid[i]; ret[1] = liquid[start]; ret[2] = liquid[end];
					}
					start += 1;
				} else {
					if (Math.abs(now) < Math.abs(min)) {
						min = now;
						ret[0] = liquid[i]; ret[1] = liquid[start]; ret[2] = liquid[end];
					}
					end -= 1;
				}
			}
		}
	}
}
