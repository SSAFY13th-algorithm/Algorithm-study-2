import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.StringTokenizer;

public class Main {

	static int N, area = 0, min_L = 1001, max_L = 0;
	static int[] squar;
	static BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
	static StringTokenizer st;

	public static void main(String[] args) throws IOException {
		init();
		
		int max_index = getMaxIndex(min_L, max_L);
		searchToStart(min_L, max_index);
		searchToEnd(max_index, max_L);
		System.out.println(area);
	}

	static void searchToStart(int start, int end) {
		int max = 0;
		for (int i = start; i <= end; i++) {
			max = Math.max(max, squar[i]);
			area += max;
		}
	}

	static void searchToEnd(int start, int end) {
		int max = 0;
		for (int i = end; i > start; i--) {
			max = Math.max(max, squar[i]);
			area += max;
		}
	}

	static void init() throws IOException {
		N = Integer.parseInt(br.readLine());
		squar = new int[1001];

		for (int i = 1; i <= N; i++) {
			st = new StringTokenizer(br.readLine());
			int index = Integer.parseInt(st.nextToken());
			int value = Integer.parseInt(st.nextToken());
			squar[index] = value;
			min_L = Math.min(min_L, index);
			max_L = Math.max(max_L, index);
		} 
	}

	static int getMaxIndex(int start, int end) {
		int max = 0;
		int max_index = 0;
		for(int i = start; i <= end; i++) {
			if (max < squar[i]) {
				max = squar[i];
				max_index = i;
			}
		}
		return max_index;
	}
}
